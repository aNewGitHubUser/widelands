language: cpp
before_install:
  - bash -e .travis.sh
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
sudo: required
dist: trusty

branches:
  except:
    - _widelands_dev_widelands_trunk

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "QFKfKCTDzhIpO12glYXbC285SPOTxBmdsi0UzsQJ6t1T43Z6n6eLVT4XnB90H4h4ri+sKyF2Qc0T/mshvPS/U74SENTb8Hz8w2NOQOpIII+YDGPGABidupnJtgsjOk36n+id8ZxIym40/uoZEOUYCkdQM2AZex1sNKTwlGPr7X8="
before_install:
      
# Let travis add additional repos and install packages for us (https://docs.travis-ci.com/user/migrating-from-legacy/#Adding-APT-Sources)
addons:
  apt:
    # The aliases used are based on a whitelist, see https://github.com/travis-ci/apt-source-whitelist for details. 
    # Clang 3.4 and 3.5 are too old (presumably) to have gotten official aliases
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - libboost-dev
      - libboost-regex-dev
      - libboost-system-dev
      - libboost-test-dev
      - libglew-dev
      - libicu-dev
      - libpng-dev
      - libsdl2-dev
      - libsdl2-image-dev
      - libsdl2-mixer-dev
      - libsdl2-ttf-dev
      - python-pip
      - zlib1g-dev
  coverity_scan:
    project:
      name: "widelands/widelands"
      description: "Build submitted via Travis CI"
    notification_email: mail@example.com
    build_command_prepend: "mkdir build && cd build && cmake -G Ninja .. -DCMAKE_BUILD_TYPE:STRING=\"$BUILD_TYPE\""
    build_command: "ninja widelands"
    branch_pattern: coverity_scan

matrix:
  include:
     - compiler: gcc
       env: GCC_VERSION="7" BUILD_TYPE="Release"
